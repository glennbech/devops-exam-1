name: Docker ECR and Terraform

on:
  push:

jobs:
  push_to_registry:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build Docker image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker build . -t task2
          docker tag task2:latest 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2009-jams:$rev
          docker tag task2:latest 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2009-jams:latest
      - name: Push Docker image
        if: github.ref == 'ref/heads/main' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2009-jams:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2009-jams:latest
          
  terraform:
    name: terraform
    needs: push_to_registry
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1
      PREFIX: 2009
      AWS_ID: 244530008913
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2009-jams:latest

    steps:
    - uses: actions/checkout@v3
    - name: setup terraform
      uses: hashicorp/setup-terraform@v2
        
    - name: initialize terraform
      id: init
      working-directory: ./infra
      run: terraform init
        
    - name: terraform plan
      id: plan
      working-directory: ./infra
      run: terraform plan -var="aws_id=$AWS_ID" -var="image=$IMAGE" -var="prefix=$PREFIX" 
      continue-on-error: true
        
    - name: terraform plan status
      if: steps.plan.outcome == 'failure'
      working-directory: ./infra
      run: exit 1
        
    - name: terraform apply
      if: github.ref == 'ref/heads/main' && github.event_name == 'push'
      working-directory: ./infra
      run: terraform apply -var="aws_id=$AWS_ID" -var="image=$IMAGE" -var="prefix=$PREFIX" --auto-approve
